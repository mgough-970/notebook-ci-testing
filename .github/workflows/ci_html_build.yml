name: Build HTML on merge

on:
  pull_request_target:
   branches:
   - main
   types: [closed]

env:
  CASJOBS_PW: ${{ secrets.CASJOBS_PW }}
  CASJOBS_USERID: ${{ secrets.CASJOBS_USERID }}

 
jobs:
  identify-changed-notebooks:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # This token is provided by GitHub Actions and is used to authenticate in the workflow
          token: ${{ secrets.GITHUB_TOKEN }}
          # Fetches the repository at the pull request head commit
          ref: ${{ github.event.pull_request.head.ref }}
          # Repository name with owner. For forks, this will be the owner of the forked repository.
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          # Fetches all history for all tags and branches
          fetch-depth: 0
      - name: List .ipynb files
        id: list-files
        run: |
          echo "FILES=$(git diff --name-only --diff-filter=AMR ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} -- '*.ipynb' | xargs)"
          echo "FILES=$FILES" >> $GITHUB_ENV
      - name: Set matrix for job
        id: set-matrix
        run: |
          echo "::set-output name=matrix::$(echo $FILES | jq -R 'split(" ") | map(select(. != "")) | {include: map({notebook: .})}')"


  execute-notebooks:
    #if: github.event.pull_request.merged == true
    needs: identify-changed-notebooks
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
        fail-fast: false
        matrix:
            notebooks: ${{fromJson(needs.identify-changed-notebooks.outputs.matrix)}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ vars.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.python-version }}
        
      - name: Install Jupyter and nbconvert
        run: pip install nbconvert

      - name: Prepare and execute notebook
        run: |
          NOTEBOOK_DIR=$(dirname ${{ matrix.notebooks }})
          
          # Check if pre-requirements.sh exists and run it
          if [ -f "${NOTEBOOK_DIR}/pre-requirements.sh" ]; then
            echo "Running pre-requirements.sh in ${NOTEBOOK_DIR}"
            chmod +x ${NOTEBOOK_DIR}/pre-requirements.sh
            (cd $NOTEBOOK_DIR; ./pre-requirements.sh)
          fi

          # Install Python dependencies from requirements.txt if it exists
          if [ -f "${NOTEBOOK_DIR}/requirements.txt" ]; then
            echo "Installing requirements from ${NOTEBOOK_DIR}/requirements.txt"
            pip install -r ${NOTEBOOK_DIR}/requirements.txt
          fi
          pip install nbconvert
          pip install jupyter
          # Execute the notebook
          jupyter nbconvert --to notebook --execute --inplace ${{ matrix.notebooks }}
      - name: Commit modified file on current branch
        run: |
          git config user.name 'CI Bot'
          git config user.email 'action@github.com'
          git add ${{ matrix.notebooks }}
          git commit -m "Storing executed notebook ${{ matrix.notebooks }}"
  
      - name: Checkout only the file to the target branch
        run: |
          git fetch
          git checkout -f gh-storage
          git checkout @{-1} ${{ matrix.notebooks }}
  
      - name: Commit and push modifications to target branch
        run: |
          git commit -m "Storing executed notebook ${{ matrix.notebooks }}"
  
          MAX_RETRIES=5
          RETRY_DELAY=10s
          for i in $(seq 1 $MAX_RETRIES); do
            git push origin gh-storage --force && break || {
              echo "Push $i failed... waiting $RETRY_DELAY"
              sleep $RETRY_DELAY
            }
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate_html:
    #if: github.event.pull_request.merged == true
    needs: execute-notebooks
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ vars.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ vars.python-version }}
        
    - name: Install dependencies
      run: |
        pip install ghp-import
        pip install jupyter-book==v0.15.1
        pip install myst-nb
        pip install astroid
        pip install nbval
        #pip install bs4
        #pip install lxml
        ## test to bypass the jupyter-book lower version
        pip install jsonschema==4.6.0
        PATH="${PATH}:${HOME}/.local/bin"

    - name: Build HTML
      run: |
        git fetch
        git checkout origin/gh-storage -- notebooks/
        jupyter-book build .

    # Push the book's HTML to github-pages
    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./_build/html
