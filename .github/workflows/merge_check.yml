name: Process .ipynb Files in Merged PR

on:
  pull_request:
    types: [closed]

jobs:
  list-ipynb-files:
    runs-on: ubuntu-latest
    #if: ${{ github.event.pull_request.merged == true }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get list of .ipynb files from the merged PR
        id: get-ipynb-files
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO_FULL_NAME=${{ github.repository }}
          
          # Fetch the list of files changed in the PR using GitHub API and format it as a newline-separated list
          FILES_LIST=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/$REPO_FULL_NAME/pulls/$PR_NUMBER/files | jq -r '[.[] | select(.filename | endswith(".ipynb")) | .filename] | join("\n")')
          echo "Jupyter Notebook files changed:"
          echo "$FILES_LIST"
          
          # Use Environment File to set the output variable, ensuring it's in a valid format
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES_LIST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Set matrix for next job
        id: set-matrix
        run: |
          # Read the formatted list from the environment file and set it as matrix
          FILES_LIST=$(cat $GITHUB_OUTPUT | grep '^files=' | cut -d'=' -f2-)
          echo "matrix=<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES_LIST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  use-ipynb-files:
    needs: list-ipynb-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{fromJson(needs.list-ipynb-files.outputs.matrix)}}
    steps:
      - name: Use .ipynb File in Matrix
        run: |
          echo "Processing .ipynb file: ${{ matrix.file }}"
          FILE_PATH="${{ matrix.file }}"
          echo "File Path: $FILE_PATH"
          FILE_NAME=$(basename $FILE_PATH)
          echo "File Name: $FILE_NAME"
